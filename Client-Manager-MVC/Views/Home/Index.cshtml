@using Client_ViewModel.DashBoard
@using System.Globalization
@model StaticalViewModel
<style>
    #highcharts-ik9wcj3-0 {
        width: 100% !important;
        overflow-x: auto;
    }

    #user-list img {
        border-radius: 5% !important;
        width: 50px;
        height: 60px;
    }
</style>
<div class="main-container">
    <div class="xs-pd-20-10 pd-ltr-20">
        <div class="title pb-20">
            <h2 class="h3 mb-0">Tổng Quan</h2>
        </div>
        <div class="row pb-10">
            @{
                if (Model != null && Model.Statisticals != null)
                {
                    foreach (var item in Model.Statisticals.OrderBy(p => p.Index))
                    {
                        <div class="col-xl-3 col-lg-3 col-md-6 mb-20">
                            <div class="card-box height-100-p widget-style3">
                                <div class="d-flex flex-wrap">
                                    <div class="widget-data">
                                        <div class="weight-700 font-24 text-dark">@(item.Title == "Revenue" ? item.Number.ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("de")) : item.Number)</div>
                                        <div class="font-14 text-secondary weight-500">
                                            @if (item.Title == "Employee")
                                            {
                                                <span style="white-space: nowrap;">Nhân Viên @("(Đang Hoạt Động)")</span>
                                            }
                                            else if (item.Title == "Product")
                                            {
                                                <span>Sản Phẩm @("(Đang Bán)")</span>
                                            }
                                            else if (item.Title == "Order")
                                            {
                                                <span>Hóa Đơn @($"(Tháng - {DateTime.Now.Month})")</span>
                                            }
                                            else
                                            {
                                                <span>Doanh Thu @($"(Tháng - {DateTime.Now.Month})")</span>
                                            }
                                        </div>
                                    </div>
                                    <div class="widget-icon" style="@(item.Title == "Employee" ? "background-color: #1b00ff;" : item.Title == "Product" ? "background-color: #dc3545;" : item.Title == "Order" ? "background-color: #28a745;" : "background-color: #ffc107;")">
                                        <div class="icon" data-color="#ffffff">
                                            @if (item.Title == "Employee")
                                            {
                                                <i class="fa-solid fa-user-tie"></i>
                                            }
                                            else if (item.Title == "Product")
                                            {
                                                <i class="fa-solid fa-cube"></i>
                                            }
                                            else if (item.Title == "Order")
                                            {
                                                <i class="fa-regular fa-credit-card"></i>
                                            }
                                            else
                                            {
                                                <i class="fa-solid fa-hand-holding-dollar"></i>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            }
        </div>

        <div class="row pb-10">
            <div class="col-md-8 mb-20">
                <div class="card-box height-100-p pd-20">
                    <div class="d-flex flex-wrap justify-content-between align-items-center pb-0 pb-md-3">
                        <div class="h5 mb-md-0">Tổng Quan Doanh Thu</div>
                        <div class="form-group mb-md-0">
                            <select class="form-control form-control-sm selectpicker" id="lineselected">
                                <option value="1">Theo Ngày</option>
                                <option value="2">Theo Tuần</option>
                                <option value="3">Theo Tháng</option>
                                <option value="4">Theo Năm</option>
                            </select>
                        </div>
                    </div>
                    <div id="activities-chart"></div>
                </div>
            </div>
            <div class="col-md-4 mb-20">
                <div class="card-box min-height-200px pd-20 mb-20" data-bgcolor="#455a64">
                    <div class="d-flex justify-content-between pb-20 text-white">
                        <div class="icon h1 text-white">
                            <i class="fa fa-calendar" aria-hidden="true"></i>
                        </div>
                        <div class="font-14 text-right">
                            @if (Model.AppointmentChart.sinceLastWeek >= 0)
                            {
                                <div><i class="icon-copy ion-arrow-up-c"></i> @Model.AppointmentChart.sinceLastWeek%</div>
                            }
                            else
                            {
                                <div><i class="icon-copy ion-arrow-down-c"></i> @Model.AppointmentChart.sinceLastWeek%</div>
                            }
                            <div class="font-12">Kể từ tuần trước</div>
                        </div>
                    </div>
                    <div class="d-flex justify-content-between align-items-end">
                        <div class="text-white">
                            <div class="font-14">Doanh Thu - Tuần</div>
                            @{
                                CultureInfo culture = CultureInfo.CurrentCulture;
                                Calendar calendar = culture.Calendar;
                            }
                            <div class="font-24 weight-500">Tuần @calendar.GetWeekOfYear(DateTime.Now, CalendarWeekRule.FirstDay, DayOfWeek.Monday)</div>
                        </div>
                        <div class="max-width-150">
                            <div id="appointment-chart"></div>
                        </div>
                    </div>
                </div>
                <div class="card-box min-height-200px pd-20" data-bgcolor="#265ed7">
                    <div class="d-flex justify-content-between pb-20 text-white">
                        <div class="icon h1 text-white">
                            <i class="fa-solid fa-calendar-days" aria-hidden="true"></i>
                        </div>
                        <div class="font-14 text-right">
                            @if (Model.SurgeryChart.sinceLastMonth >= 0)
                            {
                                <div><i class="icon-copy ion-arrow-up-c"></i> @Model.SurgeryChart.sinceLastMonth%</div>
                            }
                            else
                            {
                                <div><i class="icon-copy ion-arrow-down-c"></i> @Model.SurgeryChart.sinceLastMonth%</div>
                            }
                            <div class="font-12">Kể từ tháng trước</div>
                        </div>
                    </div>
                    <div class="d-flex justify-content-between align-items-end">
                        <div class="text-white">
                            <div class="font-14">Doanh Thu - Tháng</div>
                            @{
                                string month = DateTime.Now.Month.ToString();
                            }
                            <div class="font-24 weight-500">Tháng @month</div>
                        </div>
                        <div class="max-width-150">
                            <div id="surgery-chart"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-6 col-md-6 mb-20">
                <div class="card-box height-100-p pd-20 min-height-200px">
                    <div class="d-flex justify-content-between pb-10">
                        <div class="h5 mb-0">Top 5 Sản Phẩm Bán Chạy</div>
                        <div class="dropdown">
                            <a class="btn btn-link font-24 p-0 line-height-1 no-arrow dropdown-toggle"
                               data-color="#1b3133" href="#" role="button" data-toggle="dropdown">
                                <i class="dw dw-more"></i>
                            </a>
                            <div class="dropdown-menu dropdown-menu-right dropdown-menu-icon-list">
                                <a class="dropdown-item" style="cursor: pointer;" onclick="getTopProduct(1)">Hôm Nay</a>
                                <a class="dropdown-item" style="cursor: pointer;" onclick="getTopProduct(2)">Theo Tuần</a>
                                <a class="dropdown-item" style="cursor: pointer;" onclick="getTopProduct(3)">Theo Tháng</a>
                                <a class="dropdown-item" style="cursor: pointer;" onclick="getTopProduct(4)">Theo Năm</a>
                                <a class="dropdown-item" style="cursor: pointer;" onclick="getTopProduct(5)">Tất Cả</a>
                            </div>
                        </div>
                    </div>
                    <div class="user-list">
                        <ul id="user-list">
                            @{
                                if (Model.TopProducts != null && Model.TopProducts.Any())
                                {
                                    foreach (var item in Model.TopProducts.OrderByDescending(p => p.Quantity))
                                    {
                                        <li class="d-flex align-items-center justify-content-between">
                                            <div class="name-avatar d-flex align-items-center pr-2">
                                                <div class="avatar mr-2 flex-shrink-0">
                                                    <img src="@($"/Product/document/{item.Images}")" class="border-radius-100 box-shadow"
                                                         width="50" height="50" alt="" />
                                                </div>
                                                <div class="txt">
                                                    <span class="badge badge-pill badge-sm" data-bgcolor="#e7ebf5"
                                                          data-color="#265ed7">@item.Quantity</span>
                                                    <div class="font-14 weight-600">@item.Name</div>
                                                    <div class="font-12 weight-500" data-color="#b2b1b6">
                                                        @item.Price.ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("de")) VNĐ
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="cta flex-shrink-0">
                                                <a href="@($"/Product/Detail/{item.Id}")" class="btn btn-sm btn-outline-primary">Chi Tiết</a>
                                            </div>
                                        </li>
                                    }
                                }
                                else
                                {
                                    <li class="d-flex align-items-center justify-content-between">
                                        <div class="name-avatar d-flex align-items-center pr-2">
                                            <div class="txt">
                                                <span class="badge badge-pill badge-sm" data-bgcolor="#e7ebf5"
                                                      data-color="#265ed7">Không có bất kì sản phẩm nào được tìm thấy</span>
                                            </div>
                                        </div>
                                    </li>
                                }
                            }
                        </ul>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 col-md-6 mb-20">
                <div class="card-box height-100-p pd-20 min-height-200px">
                    <div class="d-flex justify-content-between">
                        <div class="h5 mb-0">Tổng Quan Hóa Đơn</div>
                        <div class="dropdown">
                            <a class="btn btn-link font-24 p-0 line-height-1 no-arrow dropdown-toggle"
                               data-color="#1b3133" href="#" role="button" data-toggle="dropdown">
                                <i class="dw dw-more"></i>
                            </a>
                            <div class="dropdown-menu dropdown-menu-right dropdown-menu-icon-list">
                                <a class="dropdown-item" style="cursor: pointer;" onclick="getDiseaData(1)">Hôm Nay</a>
                                <a class="dropdown-item" style="cursor: pointer;" onclick="getDiseaData(2)">HĐ Tuần</a>
                                <a class="dropdown-item" style="cursor: pointer;" onclick="getDiseaData(3)">HĐ Tháng</a>
                                <a class="dropdown-item" style="cursor: pointer;" onclick="getDiseaData(4)">HĐ Năm</a>
                                <a class="dropdown-item" style="cursor: pointer;" onclick="getDiseaData(5)">Tất Cả</a>
                            </div>
                        </div>
                    </div>

                    <div id="diseases-chart"></div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12 col-md-12 mb-20">
                <div class="card-box height-100-p pd-20 min-height-200px">
                    <div class="d-flex justify-content-between pb-10">
                        <div class="h5 mb-0">Top 5 Hóa Đơn Có Giá Trị Cao</div>
                        <div class="dropdown">
                            <a class="btn btn-link font-24 p-0 line-height-1 no-arrow dropdown-toggle"
                               data-color="#1b3133" href="#" role="button" data-toggle="dropdown">
                                <i class="dw dw-more"></i>
                            </a>
                            <div class="dropdown-menu dropdown-menu-right dropdown-menu-icon-list">
                                <a class="dropdown-item" style="cursor: pointer;" onclick="getTopOrder(1)">Hôm Nay</a>
                                <a class="dropdown-item" style="cursor: pointer;" onclick="getTopOrder(2)">Theo Tuần</a>
                                <a class="dropdown-item" style="cursor: pointer;" onclick="getTopOrder(3)">Theo Tháng</a>
                                <a class="dropdown-item" style="cursor: pointer;" onclick="getTopOrder(4)">Theo Năm</a>
                                <a class="dropdown-item" style="cursor: pointer;" onclick="getTopOrder(5)">Tất Cả</a>
                            </div>
                        </div>
                    </div>
                    <div>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col">#</th>
                                    <th scope="col">Mã Đơn</th>
                                    <th scope="col">Số Lượng</th>
                                    <th scope="col">Tổng</th>
                                    <th scope="col">Ghi Chú</th>
                                    <th scope="col">Ngày Tạo</th>
                                    <th scope="col">Chi Tiết</th>
                                </tr>
                            </thead>
                            <tbody id="order-list">
                                @{
                                    if (Model.TopOrders != null && Model.TopOrders.Any())
                                    {
                                        int count = 1;
                                        foreach (var item in Model.TopOrders.OrderByDescending(p => p.Total))
                                        {
                                            <tr>
                                                <td scope="row">@count</td>
                                                <td><div title="@item.Code">@item.Code</div></td>
                                                <td><div title="@item.Quantity">@item.Quantity</div></td>
                                                <td><div title="@item.Total">@item.Total.ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("de")) VNĐ</div></td>
                                                <td><div title="@item.Note" class="txt-title">@item.Note</div></td>
                                                <td><div title="@item.CreatedOn">@item.CreatedOn.ToString("dd/MM/yyyy")</div></td>
                                                <td><div><a href="@($"/Order/Detail/{item.Id}")" class="btn btn-sm btn-outline-primary">Chi Tiết</a></div></td>
                                            </tr>
                                            count++;
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td>Không có bất kì hóa đơn nào được tìm thấy</td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--Notify-->
<ul class="notifications"></ul>
<ul class="notification-list"></ul>

@section Scripts {
    <script src="~/src/plugins/apexcharts/apexcharts.min.js"></script>
    <script src="~/src/plugins/highcharts-6.0.7/code/highcharts.js"></script>
    <script src="~/src/plugins/highcharts-6.0.7/code/highcharts-more.js"></script>
    <script>
        var series = [];
        var datas = [];
        var params = [];
        var items = [];
        var labels = [];
        $(document).ready(function () {
            series = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.lineChart.Series));
            labels = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.lineChart.Labels));
            datas = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.AppointmentChart.data));
            params = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.SurgeryChart.data));
            items = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.DiseasesChart.Series));
            //activities-chart
            renderLineChart();
            //appointment-chart
            var options2 = {
                series: [{
                    name: 'VNĐ',
                    data: datas,
                }],
                chart: {
                    height: 70,
                    type: 'bar',
                    toolbar: {
                        show: false,
                    },
                    sparkline: {
                        enabled: true
                    },
                },
                plotOptions: {
                    bar: {
                        columnWidth: '25px',
                        distributed: true,
                        endingShape: 'rounded',
                    }
                },
                dataLabels: {
                    enabled: false
                },
                legend: {
                    show: false
                },
                xaxis: {
                    type: 'category',
                    lines: {
                        show: false,
                    },
                    axisBorder: {
                        show: false,
                    },
                    labels: {
                        show: false,
                    },
                },
                yaxis: [{
                    y: 0,
                    offsetX: 0,
                    offsetY: 0,
                    labels: {
                        show: false,
                        formatter: function (value) {
                            return value.toLocaleString('vi-VN');
                        }
                    },
                    padding: {
                        left: 0,
                        right: 0
                    }
                }],
            };
            var chart2 = new ApexCharts(document.querySelector("#appointment-chart"), options2);
            chart2.render();
            //surgery-chart
            var options3 = {
                series: [{
                    name: 'VNĐ',
                    data: params,
                }],
                chart: {
                    height: 70,
                    type: 'bar',
                    toolbar: {
                        show: false,
                    },
                    sparkline: {
                        enabled: true
                    },
                },
                plotOptions: {
                    bar: {
                        columnWidth: '25px',
                        distributed: true,
                        endingShape: 'rounded',
                    }
                },
                dataLabels: {
                    enabled: false
                },
                legend: {
                    show: false
                },
                xaxis: {
                    type: 'category',
                    lines: {
                        show: false,
                    },
                    axisBorder: {
                        show: false,
                    },
                    labels: {
                        show: false,
                    },
                },
                yaxis: [{
                    y: 0,
                    offsetX: 0,
                    offsetY: 0,
                    labels: {
                        show: false,
                        formatter: function (value) {
                            return value.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
                        }
                    },
                    padding: {
                        left: 0,
                        right: 0
                    }
                }],
            };
            var chart3 = new ApexCharts(document.querySelector("#surgery-chart"), options3);
            chart3.render();
            //diseases-chart
            renderDiseaChart();
            //Select changed
            $('#lineselected').change(getLineData);
        });

        function formatCurrency(value) {
            return parseInt(value).toLocaleString('vi-VN') + ' VNĐ';
        }

        var chart;
        function renderLineChart() {
            var maxNum = Math.max(...series.map(p => Math.max(...p.data)));
            var options = {
                series: series,
                chart: {
                    height: 300,
                    type: 'line',
                    zoom: {
                        enabled: false,
                    },
                    dropShadow: {
                        enabled: true,
                        color: '#000',
                        top: 18,
                        left: 7,
                        blur: 16,
                        opacity: 0.2
                    },
                    toolbar: {
                        show: false
                    }
                },
                colors: ['#255cd3'],
                dataLabels: {
                    enabled: false,
                },
                stroke: {
                    width: [3, 3],
                    curve: 'smooth'
                },
                grid: {
                    show: false,
                },
                markers: {
                    colors: ['#255cd3'],
                    size: 5,
                    strokeColors: '#ffffff',
                    strokeWidth: 2,
                    hover: {
                        sizeOffset: 2
                    }
                },
                xaxis: {
                    categories: labels,
                    labels: {
                        style: {
                            colors: '#8c9094'
                        }
                    }
                },
                yaxis: {
                    min: 0,
                    max: maxNum,
                    labels: {
                        style: {
                            colors: '#8c9094'
                        },
                        formatter: function (value) {
                            return value.toLocaleString('vi-VN');
                        }
                    }
                },
                legend: {
                    position: 'top',
                    horizontalAlign: 'right',
                    floating: true,
                    offsetY: 0,
                    labels: {
                        useSeriesColors: true
                    },
                    markers: {
                        width: 10,
                        height: 10,
                    }
                }
            };
            if (chart) {
                chart.updateOptions(options);
            } else {
                chart = new ApexCharts(document.querySelector("#activities-chart"), options);
                chart.render();
            }
        }

        var chart4;
        function renderDiseaChart() {
            var sum = items.reduce((partialSum, a) => partialSum + a, 0);
            var options4 = {
                series: items,
                chart: {
                    height: 350,
                    type: 'radialBar',
                },
                colors: ['#255cd3', '#455A64', '#f0746c'],
                plotOptions: {
                    radialBar: {
                        dataLabels: {
                            name: {
                                fontSize: '22px',
                            },
                            value: {
                                fontSize: '16px',
                            },
                            total: {
                                show: true,
                                label: 'Tổng Đơn',
                                formatter: function (w) {
                                    return sum
                                }
                            }
                        }
                    }
                },
                labels: ['Đã Thanh Toán', 'Chưa Thanh Toán', 'Đã Hủy'],
            };
            if (chart4) {
                chart4.updateOptions(options4);
            } else {
                chart4 = new ApexCharts(document.querySelector("#diseases-chart"), options4);
                chart4.render();
            }
        }

        function getDiseaData(type) {
            $.ajax({
                url: '@Url.Action("GetDiseases", "Home")',
                type: 'GET',
                data: { type: type },
                dataType: 'json',
                success: function (data) {
                    if (data && data.series) {
                        items = data.series;
                        renderDiseaChart();
                    }
                },
                error: function (xhr, status, error) {
                    console.error('AJAX Error:', status, error);
                }
            });
        }

        function getLineData() {
            var type = $('#lineselected').val();
            if (type == null || type == "") return;
            $.ajax({
                url: '@Url.Action("GetLineses", "Home")',
                type: 'GET',
                data: { type: type },
                dataType: 'json',
                success: function (data) {
                    if (data && data.series) {
                        labels = data.labels;
                        series = data.series;
                        renderLineChart();
                    }
                },
                error: function (xhr, status, error) {
                    console.error('AJAX Error:', status, error);
                }
            });
        }

        function getTopOrder(type) {
            if (type == null || type == "") return;
            $.ajax({
                url: '@Url.Action("GetTopOrder", "Home")',
                type: 'GET',
                data: { type: type },
                dataType: 'json',
                success: function (data) {
                    $('#order-list').empty();
                    if (data && data.length > 0) {
                        data.sort((a, b) => b.total - a.total);
                        for (var i = 0; i < data.length; i++) {
                            $('#order-list').append(
                                `
                                        <tr>
                                            <th scope="row">${i + 1}</th>
                                            <td><div title="${data[i].code}">${data[i].code}</div></td>
                                            <td><div title="${data[i].quantity}">${data[i].quantity}</div></td>
                                            <td><div title="${data[i].total.toLocaleString("de")} VNĐ">${data[i].total.toLocaleString("de")} VNĐ</div></td>
                                            <td><div title="${data[i].note}">${data[i].note}</div></td>
                                            <td><div title="${new Date(data[i].createdOn).toLocaleDateString("vi-VN")}">${new Date(data[i].createdOn).toLocaleDateString("vi-VN")}</div></td>
                                            <td><div><a href="/Order/Detail/${data[i].id}" class="btn btn-sm btn-outline-primary">Chi Tiết</a></div></td>
                                        </tr>
                                        `
                            );
                        }
                    }
                },
                error: function (xhr, status, error) {
                    console.error('AJAX Error:', status, error);
                }
            });
        }

        function getTopProduct(type) {
            if (type == null || type == "") return;
            $.ajax({
                url: '@Url.Action("GetTopProduct", "Home")',
                type: 'GET',
                data: { type: type },
                dataType: 'json',
                success: function (data) {
                    $('#user-list').empty();
                    if (data && data.length > 0) {
                        data.sort((a, b) => b.quantity - a.quantity);
                        for (var i = 0; i < data.length; i++) {
                            $('#user-list').append(
                                `
                                   <li class="d-flex align-items-center justify-content-between">
                                         <div class="name-avatar d-flex align-items-center pr-2">
                                             <div class="avatar mr-2 flex-shrink-0">
                                                   <img src="/Product/document/${data[i].images}" class="border-radius-100 box-shadow"
                                                   width="50" height="50" alt="" />
                                             </div>
                                             <div class="txt">
                                                 <span class="badge badge-pill badge-sm" data-bgcolor="#e7ebf5"
                                                     data-color="#265ed7">${data[i].quantity}</span>
                                                     <div class="font-14 weight-600">${data[i].name}</div>
                                                 <div class="font-12 weight-500" data-color="#b2b1b6">
                                                       ${formatCurrency(data[i].price)}
                                                 </div>
                                             </div>
                                         </div>
                                         <div class="cta flex-shrink-0">
                                               <a href="/Product/Detail/${data[i].id}" class="btn btn-sm btn-outline-primary">Chi Tiết</a>
                                         </div>
                                    </li>
                                 `
                            );
                        }
                    }
                },
                error: function (xhr, status, error) {
                    console.error('AJAX Error:', status, error);
                }
            });
        }
    </script>
    @if (ViewBag.Success != null)
    {
        <script>
            $(function () {
                toastSuccess('@Html.Raw(ViewBag.Success)');
            });
        </script>
    }

    @if (ViewBag.Error != null)
    {
        <script>
            $(function () {
                toastError('@Html.Raw(ViewBag.Error)');
            });
        </script>
    }
}